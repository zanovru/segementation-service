basePath: /api/v1
definitions:
  models.Segment:
    properties:
      id:
        type: integer
      slug:
        type: string
    required:
    - slug
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      segmentsToAdd:
        items:
          type: string
        type: array
      segmentsToDelete:
        items:
          type: string
        type: array
    required:
    - email
    type: object
  resources.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  resources.SegmentResource:
    properties:
      id:
        type: integer
    type: object
  resources.UserResource:
    properties:
      id:
        type: integer
    type: object
  resources.UserSegmentResource:
    properties:
      id:
        type: integer
      segments:
        items:
          $ref: '#/definitions/models.Segment'
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a Segmentation Service that can create and delete segments,
    assign them to users and get active segments for user
  title: Segmentation Service API
  version: "1.0"
paths:
  /segments:
    post:
      consumes:
      - application/json
      description: Create segment with given slug
      parameters:
      - description: Segment
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Segment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/resources.SegmentResource'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Create segment
  /segments/{slug}:
    delete:
      consumes:
      - application/json
      description: Delete segment by given slug
      parameters:
      - description: Slug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/resources.SegmentResource'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Delete segment by slug
  /users:
    post:
      consumes:
      - application/json
      description: Create user with segments that should be added to User and segments
        that should be deleted from User
      parameters:
      - description: User
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/resources.UserResource'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Create user
  /users/{id}/segments:
    get:
      consumes:
      - application/json
      description: Get segments that were added to user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/resources.UserSegmentResource'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Get user segments
swagger: "2.0"
